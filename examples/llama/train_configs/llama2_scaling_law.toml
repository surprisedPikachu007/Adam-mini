# torchtitan Config.toml
# NOTE: this toml config is a preset for 64 A100 GPUs.

[job]
dump_folder = "./outputs"
description = "Llama2_scaling_law"

[profiling]
enable_profiling = false
save_traces_folder = "profile_trace"
profile_freq = 100

[metrics]
log_freq = 1
enable_tensorboard = true
save_tb_folder = "tb"
enable_color_printing=false
enable_wandb = true
wandb_comment = ""

[model]
name = "llama2"
flavor = "1B" #1B 271M 162M 102M 67M 39M
norm_type = "fused_rmsnorm"  # [layernorm, np_layernorm, rmsnorm, fused_rmsnorm]
tokenizer_path = "path/tokenizer.model"

[optimizer]
name = "adam_mini" #"adam_mini" 
lr = 2e-4 #6e-4

[training]
batch_size = 64 # total_bs =batch_size * #num_gpu * grad_accumulation_steps
seq_len =  512 
max_norm = 1.0  # grad norm clipping
data_parallel_degree = -1
tensor_parallel_degree = 1
fp8_linear = ""
compile = false
dataset = "my_c4" #"c4"
dataset_path = "path/c4" # "./torchtitan/datasets/c4_mini/"
grad_accumulation_steps =  1   # total_bs = grad_accumulation_steps * batch_size * num_gpus

warmup_steps = 2000 #542 #324  #204 #134  #78  # lr scheduler warm up, use 1% total steps
steps = 200000 #542 #32400 #20400 #13400 #7800 
val_interval = 100 
num_val_batch = 32



[experimental]
pipeline_parallel_degree = 1

[checkpoint]
resume = false
enable_checkpoint = true
folder = "path/llama2_scaling_law" #"checkpoint"
interval_type = "steps"
interval = 50000000
model_weights_only = false
export_dtype = "float32"
async_mode = "disabled" # ["disabled", "async", "async_with_pinned_mem"]

[activation_checkpoint]
mode = 'none'  # ['none', 'selective', 'full'] # for Adam-mini we can use none, will be faster
selective_ac_option = 'op'  # 'int' = ac every positive int layer or 'op', ac based on ops policy
